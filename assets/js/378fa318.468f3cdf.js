"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4728],{5680:(e,r,n)=>{n.d(r,{xA:()=>s,yg:()=>h});var l=n(6540);function t(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);r&&(l=l.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,l)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,l,t=function(e,r){if(null==e)return{};var n,l,t={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],r.indexOf(n)>=0||(t[n]=e[n]);return t}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var u=l.createContext({}),o=function(e){var r=l.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},s=function(e){var r=o(e.components);return l.createElement(u.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return l.createElement(l.Fragment,{},r)}},p=l.forwardRef((function(e,r){var n=e.components,t=e.mdxType,a=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=o(n),h=t,_=p["".concat(u,".").concat(h)]||p[h]||d[h]||a;return n?l.createElement(_,i(i({ref:r},s),{},{components:n})):l.createElement(_,i({ref:r},s))}));function h(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var a=n.length,i=new Array(a);i[0]=p;var c={};for(var u in r)hasOwnProperty.call(r,u)&&(c[u]=r[u]);c.originalType=e,c.mdxType="string"==typeof e?e:t,i[1]=c;for(var o=2;o<a;o++)i[o]=n[o];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7692:(e,r,n)=>{n.r(r),n.d(r,{contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var l=n(8168),t=(n(6540),n(5680));const a={sidebar_label:"online_scheduler",title:"tune.scheduler.online_scheduler"},i=void 0,c={unversionedId:"reference/tune/scheduler/online_scheduler",id:"reference/tune/scheduler/online_scheduler",isDocsHomePage:!1,title:"tune.scheduler.online_scheduler",description:"OnlineScheduler Objects",source:"@site/docs/reference/tune/scheduler/online_scheduler.md",sourceDirName:"reference/tune/scheduler",slug:"/reference/tune/scheduler/online_scheduler",permalink:"/FLAML/docs/reference/tune/scheduler/online_scheduler",editUrl:"https://github.com/microsoft/FLAML/edit/main/website/docs/reference/tune/scheduler/online_scheduler.md",tags:[],version:"current",frontMatter:{sidebar_label:"online_scheduler",title:"tune.scheduler.online_scheduler"},sidebar:"referenceSideBar",previous:{title:"trial_runner",permalink:"/FLAML/docs/reference/onlineml/trial_runner"},next:{title:"trial_scheduler",permalink:"/FLAML/docs/reference/tune/scheduler/trial_scheduler"}},u=[{value:"OnlineScheduler Objects",id:"onlinescheduler-objects",children:[{value:"on_trial_result",id:"on_trial_result",children:[],level:4},{value:"choose_trial_to_run",id:"choose_trial_to_run",children:[],level:4}],level:2},{value:"OnlineSuccessiveDoublingScheduler Objects",id:"onlinesuccessivedoublingscheduler-objects",children:[{value:"__init__",id:"__init__",children:[],level:4},{value:"on_trial_result",id:"on_trial_result-1",children:[],level:4}],level:2},{value:"ChaChaScheduler Objects",id:"chachascheduler-objects",children:[{value:"__init__",id:"__init__-1",children:[],level:4},{value:"on_trial_result",id:"on_trial_result-2",children:[],level:4}],level:2}],o={toc:u};function s(e){let{components:r,...n}=e;return(0,t.yg)("wrapper",(0,l.A)({},o,n,{components:r,mdxType:"MDXLayout"}),(0,t.yg)("h2",{id:"onlinescheduler-objects"},"OnlineScheduler Objects"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"class OnlineScheduler(TrialScheduler)\n")),(0,t.yg)("p",null,"Class for the most basic OnlineScheduler."),(0,t.yg)("h4",{id:"on_trial_result"},"on","_","trial","_","result"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"def on_trial_result(trial_runner, trial: Trial, result: Dict)\n")),(0,t.yg)("p",null,"Report result and return a decision on the trial's status."),(0,t.yg)("h4",{id:"choose_trial_to_run"},"choose","_","trial","_","to","_","run"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"def choose_trial_to_run(trial_runner) -> Trial\n")),(0,t.yg)("p",null,"Decide which trial to run next."),(0,t.yg)("h2",{id:"onlinesuccessivedoublingscheduler-objects"},"OnlineSuccessiveDoublingScheduler Objects"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"class OnlineSuccessiveDoublingScheduler(OnlineScheduler)\n")),(0,t.yg)("p",null,"class for the OnlineSuccessiveDoublingScheduler algorithm."),(0,t.yg)("h4",{id:"__init__"},"_","_","init","_","_"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"def __init__(increase_factor: float = 2.0)\n")),(0,t.yg)("p",null,"Constructor."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Arguments"),":"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"increase_factor")," - A float of multiplicative factor\nused to increase resource lease. Default is 2.0.")),(0,t.yg)("h4",{id:"on_trial_result-1"},"on","_","trial","_","result"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"def on_trial_result(trial_runner, trial: Trial, result: Dict)\n")),(0,t.yg)("p",null,"Report result and return a decision on the trial's status."),(0,t.yg)("h2",{id:"chachascheduler-objects"},"ChaChaScheduler Objects"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"class ChaChaScheduler(OnlineSuccessiveDoublingScheduler)\n")),(0,t.yg)("p",null,"class for the ChaChaScheduler algorithm."),(0,t.yg)("h4",{id:"__init__-1"},"_","_","init","_","_"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"def __init__(increase_factor: float = 2.0, **kwargs)\n")),(0,t.yg)("p",null,"Constructor."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Arguments"),":"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"increase_factor")," - A float of multiplicative factor\nused to increase resource lease. Default is 2.0.")),(0,t.yg)("h4",{id:"on_trial_result-2"},"on","_","trial","_","result"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"def on_trial_result(trial_runner, trial: Trial, result: Dict)\n")),(0,t.yg)("p",null,"Report result and return a decision on the trial's status."))}s.isMDXComponent=!0}}]);