"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5500],{5680:(e,a,n)=>{n.d(a,{xA:()=>u,yg:()=>m});var t=n(6540);function l(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){l(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,l=function(e,a){if(null==e)return{};var n,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(l[n]=e[n]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=t.createContext({}),p=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},u=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},g={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),m=l,d=c["".concat(s,".").concat(m)]||c[m]||g[m]||r;return n?t.createElement(d,o(o({ref:a},u),{},{components:n})):t.createElement(d,o({ref:a},u))}));function m(e,a){var n=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=c;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<r;p++)o[p]=n[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2560:(e,a,n)=>{n.r(a),n.d(a,{contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var t=n(8168),l=(n(6540),n(5680));const r={},o="Installation",i={unversionedId:"Installation",id:"Installation",isDocsHomePage:!1,title:"Installation",description:"Python",source:"@site/docs/Installation.md",sourceDirName:".",slug:"/Installation",permalink:"/FLAML/docs/Installation",editUrl:"https://github.com/microsoft/FLAML/edit/main/website/docs/Installation.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Getting Started",permalink:"/FLAML/docs/Getting-Started"},next:{title:"AutoGen for Large Language Models",permalink:"/FLAML/docs/Use-Cases/Autogen"}},s=[{value:"Python",id:"python",children:[{value:"Optional Dependencies",id:"optional-dependencies",children:[{value:"Autogen",id:"autogen",children:[],level:4},{value:"Task-oriented AutoML",id:"task-oriented-automl",children:[],level:4},{value:"Extra learners/models",id:"extra-learnersmodels",children:[],level:4},{value:"Notebook",id:"notebook",children:[],level:4},{value:"Distributed tuning",id:"distributed-tuning",children:[],level:4},{value:"Test and Benchmark",id:"test-and-benchmark",children:[],level:4}],level:3}],level:2},{value:".NET",id:"net",children:[],level:2}],p={toc:s};function u(e){let{components:a,...n}=e;return(0,l.yg)("wrapper",(0,t.A)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"installation"},"Installation"),(0,l.yg)("h2",{id:"python"},"Python"),(0,l.yg)("p",null,"FLAML requires ",(0,l.yg)("strong",{parentName:"p"},"Python version >= 3.7"),". It can be installed from pip:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"pip install flaml\n")),(0,l.yg)("p",null,"or conda:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"conda install flaml -c conda-forge\n")),(0,l.yg)("h3",{id:"optional-dependencies"},"Optional Dependencies"),(0,l.yg)("h4",{id:"autogen"},(0,l.yg)("a",{parentName:"h4",href:"Use-Cases/Autogen"},"Autogen")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'pip install "flaml[autogen]"\n')),(0,l.yg)("h4",{id:"task-oriented-automl"},(0,l.yg)("a",{parentName:"h4",href:"Use-Cases/Task-Oriented-AutoML"},"Task-oriented AutoML")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'pip install "flaml[automl]"\n')),(0,l.yg)("h4",{id:"extra-learnersmodels"},"Extra learners/models"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"openai models")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'pip install "flaml[openai]"\n')),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"catboost")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'pip install "flaml[catboost]"\n')),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"vowpal wabbit")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'pip install "flaml[vw]"\n')),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"time series forecaster: prophet, statsmodels")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'pip install "flaml[forecast]"\n')),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"huggingface transformers")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'pip install "flaml[hf]"\n')),(0,l.yg)("h4",{id:"notebook"},"Notebook"),(0,l.yg)("p",null,"To run the ",(0,l.yg)("a",{parentName:"p",href:"https://github.com/microsoft/FLAML/tree/main/notebook"},"notebook examples"),",\ninstall flaml with the ","[","notebook","]"," option:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'pip install "flaml[notebook]"\n')),(0,l.yg)("h4",{id:"distributed-tuning"},"Distributed tuning"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"ray")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'pip install "flaml[ray]"\n')),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"spark")),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},(0,l.yg)("em",{parentName:"p"},"Spark support is added in v1.1.0"))),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'pip install "flaml[spark]>=1.1.0"\n')),(0,l.yg)("p",null,"For cloud platforms such as ",(0,l.yg)("a",{parentName:"p",href:"https://azure.microsoft.com/en-us/products/synapse-analytics/"},"Azure Synapse"),", Spark clusters are provided.\nBut you may also need to install ",(0,l.yg)("inlineCode",{parentName:"p"},"Spark")," manually when setting up your own environment.\nFor latest Ubuntu system, you can install Spark 3.3.0 standalone version with below script.\nFor more details of installing Spark, please refer to ",(0,l.yg)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/api/python/getting_started/install.html"},"Spark Doc"),"."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'sudo apt-get update && sudo apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \\\n    ca-certificates-java ca-certificates openjdk-17-jdk-headless \\\n    && sudo apt-get clean && sudo rm -rf /var/lib/apt/lists/*\nwget --progress=dot:giga "https://www.apache.org/dyn/closer.lua/spark/spark-3.3.0/spark-3.3.0-bin-hadoop2.tgz?action=download" \\\n    -O - | tar -xzC /tmp; archive=$(basename "spark-3.3.0/spark-3.3.0-bin-hadoop2.tgz") \\\n    bash -c "sudo mv -v /tmp/\\${archive/%.tgz/} /spark"\nexport SPARK_HOME=/spark\nexport PYTHONPATH=/spark/python/lib/py4j-0.10.9.5-src.zip:/spark/python\nexport PATH=$PATH:$SPARK_HOME/bin\n')),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"nni")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'pip install "flaml[nni]"\n')),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"blendsearch")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'pip install "flaml[blendsearch]"\n')),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"synapse")),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},(0,l.yg)("em",{parentName:"p"},"To install flaml in Azure Synapse and similar cloud platform"))),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"pip install flaml[synapse]\n")),(0,l.yg)("h4",{id:"test-and-benchmark"},"Test and Benchmark"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"test")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"pip install flaml[test]\n")),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"benchmark")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"pip install flaml[benchmark]\n")),(0,l.yg)("h2",{id:"net"},".NET"),(0,l.yg)("p",null,"FLAML has a .NET implementation in ",(0,l.yg)("a",{parentName:"p",href:"http://dot.net/ml"},"ML.NET"),", an open-source, cross-platform machine learning framework for .NET."),(0,l.yg)("p",null,"You can use FLAML in .NET in the following ways:"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Low-code")),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"https://dotnet.microsoft.com/apps/machinelearning-ai/ml-dotnet/model-builder"},(0,l.yg)("em",{parentName:"a"},"Model Builder"))," - A Visual Studio extension for training ML models using FLAML. For more information on how to install, see the ",(0,l.yg)("a",{parentName:"li",href:"https://docs.microsoft.com/dotnet/machine-learning/how-to-guides/install-model-builder?tabs=visual-studio-2022"},"install Model Builder")," guide."),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"https://docs.microsoft.com/dotnet/machine-learning/automate-training-with-cli"},(0,l.yg)("em",{parentName:"a"},"ML.NET CLI"))," - A dotnet CLI tool for training machine learning models using FLAML on Windows, MacOS, and Linux. For more information on how to install the ML.NET CLI, see the ",(0,l.yg)("a",{parentName:"li",href:"https://docs.microsoft.com/dotnet/machine-learning/how-to-guides/install-ml-net-cli?tabs=windows"},"install the ML.NET CLI")," guide.")),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Code-first")),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"https://www.nuget.org/packages/Microsoft.ML.AutoML/0.20.0-preview.22313.1"},(0,l.yg)("em",{parentName:"a"},"Microsoft.ML.AutoML"))," - NuGet package that provides direct access to the FLAML AutoML APIs that power low-code solutions like Model Builder and the ML.NET CLI. For more information on installing NuGet packages, see the install and use a NuGet package in ",(0,l.yg)("a",{parentName:"li",href:"https://docs.microsoft.com/nuget/quickstart/install-and-use-a-package-in-visual-studio"},"Visual Studio")," or ",(0,l.yg)("a",{parentName:"li",href:"https://docs.microsoft.com/nuget/quickstart/install-and-use-a-package-using-the-dotnet-cli"},"dotnet CLI")," guides.")),(0,l.yg)("p",null,"To get started with the ML.NET API and AutoML, see the ",(0,l.yg)("a",{parentName:"p",href:"https://github.com/dotnet/csharp-notebooks#machine-learning"},"csharp-notebooks"),"."))}u.isMDXComponent=!0}}]);