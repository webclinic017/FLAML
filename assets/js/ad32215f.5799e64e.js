"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[177],{5680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>m});var n=r(6540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=s(r),m=o,d=f["".concat(c,".").concat(m)]||f[m]||p[m]||a;return r?n.createElement(d,l(l({ref:t},u),{},{components:r})):n.createElement(d,l({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},2759:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(8168),o=(r(6540),r(5680));const a={sidebar_label:"utils",title:"automl.nlp.utils"},l=void 0,i={unversionedId:"reference/automl/nlp/utils",id:"reference/automl/nlp/utils",isDocsHomePage:!1,title:"automl.nlp.utils",description:"format\\_vars",source:"@site/docs/reference/automl/nlp/utils.md",sourceDirName:"reference/automl/nlp",slug:"/reference/automl/nlp/utils",permalink:"/FLAML/docs/reference/automl/nlp/utils",editUrl:"https://github.com/microsoft/FLAML/edit/main/website/docs/reference/automl/nlp/utils.md",tags:[],version:"current",frontMatter:{sidebar_label:"utils",title:"automl.nlp.utils"},sidebar:"referenceSideBar",previous:{title:"utils",permalink:"/FLAML/docs/reference/automl/nlp/huggingface/utils"},next:{title:"metrics",permalink:"/FLAML/docs/reference/automl/spark/metrics"}},c=[{value:"format_vars",id:"format_vars",children:[],level:4}],s={toc:c};function u(e){let{components:t,...r}=e;return(0,o.yg)("wrapper",(0,n.A)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h4",{id:"format_vars"},"format","_","vars"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-python"},"def format_vars(resolved_vars: Dict) -> str\n")),(0,o.yg)("p",null,"Formats the resolved variable dict into a single string."))}u.isMDXComponent=!0}}]);